version: "3"

networks:
  default:
    external:
      name: traefik

services:
  portainer:
    image: portainer/portainer
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  traefik:
    image: traefik:v2.2
    container_name: traefik
    restart: always
    security_opt:
      - no-new-privileges:true
    ports:
      - 80:80
      - 443:443
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - ROOT_URL=${ROOT_URL}
      - TZ=${TZ}
    env_file:
      - ./credentials.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./data/traefik.yml:/traefik.yml:ro
      - ./data/acme.json:/acme.json
    labels:
      # Auth middleware forwarding to OIDC endpoint
      - "traefik.http.routers.traefik.middlewares=traefik-forward-auth"

      # Basic Auth see https://linux.die.net/man/1/htpasswd for how to generate password
      # - "traefik.http.middlewares.traefik-auth.basicauth.users=sneaker15:$$2y$$10$$Tv8w.gNaK494ENTLHgO/MefJa/XPldNYEWbSoQo77mcvUkM5RRHeu"
      # - "traefik.http.routers.traefik.middlewares=traefik-auth"

      # define resolver configuration
      - traefik.http.routers.traefik.tls.certresolver=cloudflare
      - traefik.http.routers.traefik.tls.domains[0].main=${ROOT_URL}
      - traefik.http.routers.traefik.tls.domains[0].sans=*.${ROOT_URL}
      - traefik.http.routers.traefik.service=api@internal

  traefik-forward-auth:
    image: thomseddon/traefik-forward-auth:latest
    environment:
      - DEFAULT_PROVIDER=oidc
      - COOKIE_DOMAIN=${ROOT_URL}
      - AUTH_HOST=auth.${ROOT_URL}
      # Increase the log level to see e.g. ACME certificate request entries
      # - LOG_LEVEL=debug
    env_file:
      - ./oidc.env
    labels:
      - traefik.http.routers.traefik-forward-auth.rule=Host(`auth.${ROOT_URL}`)
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.address=http://traefik-forward-auth:4181
      - traefik.http.middlewares.traefik-forward-auth.forwardauth.authResponseHeaders=X-Forwarded-User
      - traefik.http.routers.traefik-forward-auth.middlewares=traefik-forward-auth # required to avoid endles login loop
      - traefik.http.services.traefik-forward-auth.loadbalancer.server.port=4181

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    container_name: whoami
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
      - traefik.http.routers.whoami.middlewares=traefik-forward-auth

volumes:
  portainer_data:
