version: "3"

networks:
  default:
    external:
      name: traefik
  internal:

services:
  certbot:
    # run this endpoint initially (TODO: integrate with a check into above query)
    # entrypoint: /initial_start.sh
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    environment:
      - CERTBOT_DOMAIN=${ROOT_URL}
      - CERTBOT_EMAIL=letsencrypt@outgoer.de
    image: certbot/dns-cloudflare:latest
    networks:
      - internal
    restart: unless-stopped
    volumes:
      - ./credentials.txt:/credentials.txt
      - ./initial_start.sh:/initial_start.sh
      - ./letsencrypt/etc:/etc/letsencrypt
      - ./letsencrypt/var:/var/lib/letsencrypt
      - ./letsencrypt/log:/var/log/letsencrypt

  portainer:
    image: portainer/portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    labels:
      - "traefik.http.routers.portainer.rule=Host(`portainer.${ROOT_URL}`)"
      - "traefik.http.routers.portainer.tls=true"

  traefik:
    command:
      - --api.insecure=true
      - --api.dashboard=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.network=traefik
      - --providers.file.filename=/etc/traefik/dyn-traefik.yml
    # The official v2.0 Traefik docker image
    image: traefik:v2.0
    labels:
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
    ports:
      # The HTTP port
      - "80:80"
      # The HTTPS port
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    restart: always
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./dyn-traefik.yml:/etc/traefik/dyn-traefik.yml
      - ./letsencrypt/etc:/certs

  whoami:
    # A container that exposes an API to show its IP address
    image: containous/whoami
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.${ROOT_URL}`)"
      - "traefik.http.routers.whoami.tls=true"

volumes:
  portainer_data:
