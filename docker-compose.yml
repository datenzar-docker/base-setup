version: "3.6"

networks:
  default:
    name: traefik
    external: true

services:
  monitoring:
    image: netdata/netdata
    cap_add:
      # - SYS_PTRACE
      - SYS_ADMIN # required for docker network interfaces monitoring https://learn.netdata.cloud/docs/agent/packaging/docker#docker-container-network-interfaces-monitoring
    environment:
      TZ: ${TZ}
    hostname: monitoring.${ROOT_URL} # set to fqdn of host
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      traefik.http.routers.netdata.rule: Host(`monitoring.${ROOT_URL}`, `netdata.${ROOT_URL}`)
      traefik.http.middlewares.netdata.headers.browserXSSFilter: true
      traefik.http.middlewares.netdata.headers.contentTypeNosniff: true
      traefik.http.middlewares.netdata.headers.forceSTSHeader: true
      traefik.http.middlewares.netdata.headers.frameDeny: true
      traefik.http.middlewares.netdata.headers.sslredirect: true
      traefik.http.middlewares.netdata.headers.stsIncludeSubdomains: true
      traefik.http.middlewares.netdata.headers.stsPreload: true
      traefik.http.middlewares.netdata.headers.stsSeconds: 315360000
      traefik.http.routers.netdata.middlewares: traefik-auth,netdata
    pid: host # required for docker network interfaces monitoring https://learn.netdata.cloud/docs/agent/packaging/docker#docker-container-network-interfaces-monitoring
    restart: unless-stopped
    # required to permit SYS_PTRACE https://github.com/moby/moby/issues/7276
    security_opt:
      - apparmor:unconfined
    volumes:
      - netdata_cache:/var/cache/netdata
      - netdata_config:/etc/netdata
      - netdata_lib:/var/lib/netdata
      # mounted directories -> read-only
      - /etc/passwd:/host/etc/passwd:ro
      - /etc/group:/host/etc/group:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro

  portainer:
    image: portainer/portainer-ce:latest
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      # Frontend
      traefik.http.routers.frontend.rule: Host(`portainer.${ROOT_URL}`)
      traefik.http.routers.frontend.service: frontend
      traefik.http.services.frontend.loadbalancer.server.port: 9000

      # Edge
      traefik.http.routers.edge.rule: Host(`edge.${ROOT_URL}`)
      traefik.http.routers.edge.service: edge
      traefik.http.services.edge.loadbalancer.server.port: 8000
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer:/data

  statping:
    image: adamboutcher/statping-ng:latest
    environment:
      DB_CONN: sqlite
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
    restart: always
    volumes:
      - statping_data:/app

  traefik:
    image: traefik:v2.8
    command:
      - "--log.level=INFO"
    depends_on:
      init:
        condition: service_completed_successfully
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      ROOT_URL: ${ROOT_URL}
      TZ: ${TZ}
    env_file:
      - ./credentials.env
    extra_hosts:
      - host.docker.internal:172.17.0.1 # Needed to avoid Bad Gateway error message when redirecting to host network (e.g. for homeassistant).
    labels:
      com.centurylinklabs.watchtower.enable: true
      traefik.enable: true
      # configuration for traefik authentication
      traefik.http.middlewares.traefik-auth.basicauth.users: $TRAEFIK_AUTH
      traefik.http.routers.traefik.middlewares: traefik-auth

      # define resolver configuration
      traefik.http.routers.traefik.tls.certresolver: cloudflare
      traefik.http.routers.traefik.tls.domains[0].main: ${ROOT_URL}
      traefik.http.routers.traefik.tls.domains[0].sans: "*.${ROOT_URL}"
      traefik.http.routers.traefik.service: api@internal
    ports:
      # - 53:53 # deactivated, as dns is conflicting with bind service
      # - 69:69/udp # deactivated, as tftp seems not to work on bridge (behind traefik) https://github.com/linuxserver/docker-netbootxyz/issues/11
      - 80:80
      - 443:443
    restart: always
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/traefik.yml:ro
      - ./traefik/acme.json:/acme.json

  ## Watchtower upgrades services automatically
  watchtower:
    image: containrrr/watchtower
    # For testing purposes, set the interval to 30 seconds
    # command: --interval 30
    environment:
      PUID: ${PUID}
      PGID: ${PGID}
      TZ: ${TZ}
      WATCHTOWER_CLEANUP: "true"
      WATCHTOWER_LABEL_ENABLE: "true" # Update containers that have a com.centurylinklabs.watchtower.enable label set to true.
      WATCHTOWER_POLL_INTERVAL: 7200 # checks for updates every two hours
    restart: unless-stopped
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "~/.docker/config.json:/config.json" # optional, for authentication if you have a Docker Hub account

  whoami:
    image: "traefik/whoami"
    labels:
      traefik.enable: true
      # traefik.http.routers.whoami.rule: Host(`whoami.localhost`)
      # traefik.http.routers.whoami.entrypoints: web
      # traefik.http.routers.whoami.middlewares: whoami

  # whoamiudp:
  #   image: "traefik/whoamiudp"
  #   labels:
  #     traefik.udp.routers.whoamiudp.entrypoints: tftp
  #     traefik.udp.routers.whoamiudp.service: whoamiudp
  #     traefik.udp.services.whoamiudp.loadbalancer.server.port: 8080

  ## Config dir needs to be writable by uid/gid 1000
  ## This container sets the right permissions and exits
  init:
    image: busybox:latest
    command: 
      - /bin/sh
      - -c
      - |    
        touch /traefik/acme.json
        chmod 600 /traefik/acme.json
        chown -R 1000:1000 /traefik
    volumes:
      - ./traefik:/traefik
    labels:
      org.prind.service: init


volumes:
  netdata_cache:
  netdata_config:
  netdata_lib:
  portainer_data:
  statping_data:
